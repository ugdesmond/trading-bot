"""initial migration

Revision ID: 44ac760b0584
Revises: 
Create Date: 2018-03-20 17:45:09.822000

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '44ac760b0584'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('currency_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=60), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('exchange_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('market_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('persons',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('firstname', sa.String(length=64), nullable=False),
    sa.Column('surname', sa.String(length=64), nullable=False),
    sa.Column('othernames', sa.String(length=64), nullable=True),
    sa.Column('image_url', sa.String(length=200), nullable=True),
    sa.Column('phone_number', sa.String(length=20), nullable=True),
    sa.Column('contact_address', sa.String(length=300), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('transaction_status',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('transaction_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('description', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('email', sa.String(length=64), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.Column('person_id', sa.BigInteger(), nullable=False),
    sa.ForeignKeyConstraint(['person_id'], ['persons.id'], ),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('accounts',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('api_key', sa.String(length=100), nullable=True),
    sa.Column('user_id', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tickers',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('date_time', sa.DateTime(), nullable=False),
    sa.Column('min_amount', sa.Float(), nullable=True),
    sa.Column('max_amount', sa.Float(), nullable=True),
    sa.Column('user_id', sa.BigInteger(), nullable=True),
    sa.Column('markettype_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['markettype_id'], ['market_type.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('orders',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('account_id', sa.BigInteger(), nullable=True),
    sa.Column('symbol_exchange', sa.String(length=60), nullable=True),
    sa.Column('transaction_status', sa.Integer(), nullable=True),
    sa.Column('currency_type', sa.BigInteger(), nullable=True),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('currency_amount', sa.Float(), nullable=False),
    sa.Column('date_time', sa.DateTime(), nullable=False),
    sa.Column('order_ref', sa.String(length=40), nullable=True),
    sa.Column('tickers_min', sa.Float(), nullable=True),
    sa.Column('tickers_max', sa.Float(), nullable=True),
    sa.Column('exchange_type_id', sa.Integer(), nullable=True),
    sa.Column('market_type_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ),
    sa.ForeignKeyConstraint(['currency_type'], ['currency_type.id'], ),
    sa.ForeignKeyConstraint(['exchange_type_id'], ['exchange_type.id'], ),
    sa.ForeignKeyConstraint(['market_type_id'], ['market_type.id'], ),
    sa.ForeignKeyConstraint(['transaction_status'], ['transaction_status.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('order_ref')
    )
    op.create_table('wallet',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('total_amount', sa.Float(), nullable=False),
    sa.Column('available_amount', sa.Float(), nullable=False),
    sa.Column('transaction_amount', sa.Float(), nullable=True),
    sa.Column('currency_type', sa.BigInteger(), nullable=True),
    sa.Column('account_id', sa.BigInteger(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ),
    sa.ForeignKeyConstraint(['currency_type'], ['currency_type.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('order_payment_detail',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('order_id', sa.BigInteger(), nullable=True),
    sa.Column('transaction_fee', sa.Float(), nullable=True),
    sa.Column('uuid', sa.String(length=200), nullable=True),
    sa.Column('original_amount', sa.Float(), nullable=True),
    sa.Column('remaining_amount', sa.Float(), nullable=True),
    sa.Column('executed_amount', sa.Float(), nullable=True),
    sa.Column('order_ref', sa.String(length=40), nullable=True),
    sa.Column('payment_status', sa.String(length=45), nullable=True),
    sa.Column('is_cancelled', sa.Boolean(), nullable=True),
    sa.Column('is_live', sa.Boolean(), nullable=True),
    sa.Column('date_time', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('order_ref')
    )
    op.create_table('wallet_payment_detail',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('transaction_type', sa.Integer(), nullable=True),
    sa.Column('transaction_fee', sa.Float(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=True),
    sa.Column('date_time', sa.DateTime(), nullable=False),
    sa.Column('wallet_id', sa.BigInteger(), nullable=True),
    sa.Column('exchange_type_id', sa.Integer(), nullable=True),
    sa.Column('payment_status', sa.String(length=45), nullable=True),
    sa.ForeignKeyConstraint(['exchange_type_id'], ['exchange_type.id'], ),
    sa.ForeignKeyConstraint(['transaction_type'], ['transaction_type.id'], ),
    sa.ForeignKeyConstraint(['wallet_id'], ['wallet.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('wallet_payment_detail')
    op.drop_table('order_payment_detail')
    op.drop_table('wallet')
    op.drop_table('orders')
    op.drop_table('tickers')
    op.drop_table('accounts')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('transaction_type')
    op.drop_table('transaction_status')
    op.drop_table('roles')
    op.drop_table('persons')
    op.drop_table('market_type')
    op.drop_table('exchange_type')
    op.drop_table('currency_type')
    # ### end Alembic commands ###
